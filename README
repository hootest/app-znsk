### Create app znsk and rename znsk to app-znsk
```
    react-native init znsk
```
### Run instructions for iOS:
```
    • cd /Users/sai/Desktop/yunke/workdir/znsk && npx react-native run-ios
    - or -
    • Open znsk/ios/znsk.xcworkspace in Xcode or run "xed -b ios"
    • Hit the Run button
```
### Run instructions for Android:
```
    • Have an Android emulator running (quickest way to get started), or a device connected.
    • cd /Users/sai/Desktop/yunke/workdir/znsk && npx react-native run-android
```
### [TypeScript React Native Starter](https://github.com/microsoft/TypeScript-React-Native-Starter)
- Adding TypeScript
    ```
    yarn add --dev typescript react-native-typescript-transformer
    yarn add --dev @types/react @types/react-native
    yarn tsc --init --pretty --jsx react-native
    touch rn-cli.config.js
    ```
     The rn-cli.config.js contains the settings for the React Native TypeScript Transformer.  
    ```
    module.exports = {
        getTransformModulePath() {
            return require.resolve("react-native-typescript-transformer");
        },
        getSourceExts() {
            return ["ts", "tsx"];
        }
    };
    ```

- Adding TypeScript Testing Infrastructure
    ```
    yarn add --dev ts-jest
    yarn add --dev @types/jest  @types/react-test-renderer
    ```
    we'll open up our `package.json` and replace the jest field with the following:  
    ```
    "jest": {
        "preset": "react-native",
        "moduleFileExtensions": [
            "ts",
            "tsx",
            "js"
        ],
        "transform": {
            "^.+\\.(js)$": "<rootDir>/node_modules/babel-jest",
            "\\.(ts|tsx)$": "<rootDir>/node_modules/ts-jest/preprocessor.js"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "testPathIgnorePatterns": [
            "\\.snap$",
            "<rootDir>/node_modules/"
        ],
        "cacheDirectory": ".jest/cache"
    }
    ```
    Ignoring More Files `.gitignore`
    ```
    # Jest
    .jest/
    ```
- Migrating to TypeScript
    Rename the generated `App.js` and `__tests__/App.js` files to `App.tsx`. `index.js` needs to use the `.js` extension. All new files should use the `.tsx` extension (or `.ts` if the file doesn't contain any JSX).
- Add global-shim.d.ts
    ```
    type ErrorHandlerCallback = (error: any, isFatal?: boolean) => void;

    interface ErrorUtils {
        setGlobalHandler: (callback: ErrorHandlerCallback) => void;
        getGlobalHandler: () => ErrorHandlerCallback;
    }

    declare module global {
        interface NodeRequire {
            (id: string): any;
        }

        var require: NodeRequire;

        /**
        * Console polyfill
        * @see https://facebook.github.io/react-native/docs/javascript-environment.html#polyfills
        */
        interface Console {
            error(message?: any, ...optionalParams: any[]): void;
            info(message?: any, ...optionalParams: any[]): void;
            log(message?: any, ...optionalParams: any[]): void;
            warn(message?: any, ...optionalParams: any[]): void;
            trace(message?: any, ...optionalParams: any[]): void;
            debug(message?: any, ...optionalParams: any[]): void;
            table(...data: any[]): void;
            disableYellowBox: boolean;
            ignoredYellowBox: string[];
        }

        var console: Console;

        /**
        * This contains the non-native `XMLHttpRequest` object, which you can use if you want to route network requests
        * through DevTools (to trace them):
        *
        *   global.XMLHttpRequest = global.originalXMLHttpRequest;
        *
        * @see https://github.com/facebook/react-native/issues/934
        */
        const originalXMLHttpRequest: any;

        const __BUNDLE_START_TIME__: number;
        const ErrorUtils: ErrorUtils;

        /**
        * This variable is set to true when react-native is running in Dev mode
        * Typical usage:
        * <code> if (__DEV__) console.log('Running in dev mode')</code>
        */
        const __DEV__: boolean;

        const HermesInternal: null | {};
    }
    ```